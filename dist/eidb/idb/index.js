import base from"../base.js";import object_store from"./object-store.js";import key_range from"./key-range.js";import cursor from"./cursor.js";import cursor_with_value from"./cursor-with-value.js";var log=console.log,logw=console.warn,loge=console.error;const new_lock=base.new_lock;class index{self=null;constructor(e){this.self=e}SETS_AND_GETS;get Key_Path(){return this.self.keyPath}get multientry(){return this.self.multiEntry}get Name(){return this.self.name}get Object_Store(){return new object_store(this.self.objectStore)}get unique(){return this.self.unique}METHODS;async count(e){try{if(null==e)var r=this.self.count();else if(e.constructor==key_range)r=this.self.count(e.self);else r=this.self.count(e);var[t,s]=new_lock();return r.onerror=e=>{s(e.target.error)},r.onsuccess=e=>{s(e.target.result)},await t}catch(e){return loge("[EI] index.count: Error:",e),e}}async get(e){try{if(null==e)var r=this.self.get();else if(e.constructor==key_range)r=this.self.get(e.self);else r=this.self.get(e);var[t,s]=new_lock();return r.onerror=e=>{s(e.target.error)},r.onsuccess=e=>{s(e.target.result)},await t}catch(e){return loge("[EI] index.get: Error:",e),e}}async get_all(e,r){try{if(null==e)var t=this.self.getAll();else if(e.constructor==key_range)t=this.self.getAll(e.self,r);else t=this.self.getAll(e,r);var[s,o]=new_lock();return t.onerror=e=>{o(e.target.error)},t.onsuccess=e=>{o(e.target.result)},await s}catch(e){return loge("[EI] index.get_all: Error:",e),e}}async get_all_keys(e,r){try{if(null==e)var t=this.self.getAllKeys();else if(e.constructor==key_range)t=this.self.getAllKeys(e.self,r);else t=this.self.getAllKeys(e,r);var[s,o]=new_lock();return t.onerror=e=>{o(e.target.error)},t.onsuccess=e=>{o(e.target.result)},await s}catch(e){return loge("[EI] index.get_all_keys: Error:",e),e}}async get_key(e){try{if(null==e)var r=this.self.getKey();else if(e.constructor==key_range)r=this.self.getKey(e.self);else r=this.self.getKey(e);var[t,s]=new_lock();return r.onerror=e=>{s(e.target.error)},r.onsuccess=e=>{s(e.target.result)},await t}catch(e){return loge("[EI] index.get_key: Error:",e),e}}async open_cursor(e,r="next",t){try{if(null==e)var s=this.self.openCursor();else if(e.constructor==key_range)s=this.self.openCursor(e.self,r);else s=this.self.openCursor(e,r);var[o,l]=new_lock();return s.onerror=function(e){l(e.target.error)},s.onsuccess=async function(e){var r=e.target.result;if(null!=r){"stop"==await t(r)?l():r.continue()}else l(null)},await o}catch(e){return loge("[EI] index.open_cursor: Error:",e),e}}async open_key_cursor(e,r="next",t){try{if(null==e)var s=this.self.openCursor();else if(e.constructor==key_range)s=this.self.openCursor(e.self,r);else s=this.self.openCursor(e,r);var[o,l]=new_lock();return s.onerror=function(e){l(e.target.error)},s.onsuccess=async function(e){var r=e.target.result;if(null!=r){"stop"==await t(r)?l():r.continue()}else l(null)},await o}catch(e){return loge("[EI] index.open_key_cursor: Error:",e),e}}EXTENDED_METHODS(){}async delete(e){var r=0;return await this.open_cursor(e,"next",(e=>{e.delete(),r++})),r}}export default index;